<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="aeedb81b-14ef-5679-a3be-7e1a460e4953"  version="1.0.1" api-version="6.0.0" allowed-operations="vef" restartMode="1" resumeFromFailedMode="0" >
<display-name><![CDATA[Edit TCA]]></display-name>
<ref-types><![CDATA[(VSPK:TCA)]]></ref-types>
<position x='100.0' y='50.0'/>
<input><param name='tCAObj' type='VSPK:TCA' >
</param>

<param name='description' type='string' >
</param>

<param name='externalID' type='string' >
</param>

<param name='metric' type='VSPK:TCAMetric' >
</param>

<param name='name' type='string' >
</param>

<param name='period' type='number' >
</param>

<param name='scope' type='VSPK:TCAScope' >
</param>

<param name='threshold' type='number' >
</param>

<param name='type' type='VSPK:TCAType' >
</param>

</input><workflow-item name='item0' type='end' end-mode='0' >
<position x='384.5' y='45.40909090909091'/>
</workflow-item>
<workflow-item name='item1' out-name='item0' type='task' >
<display-name><![CDATA[Scriptable task]]></display-name>
<script encoded='false'><![CDATA[var session = tCAObj.session;

if (description) {
   tCAObj.description = description;
} else if (tCAObj.description) {
   tCAObj.description = "";
}
if (externalID) {
   tCAObj.externalID = externalID;
} else if (tCAObj.externalID) {
   tCAObj.externalID = "";
}
tCAObj.metric = metric;
if (name) {
   tCAObj.name = name;
} else if (tCAObj.name) {
   tCAObj.name = "";
}
tCAObj.period = period;
tCAObj.scope = scope;
tCAObj.threshold = threshold;
tCAObj.type = type;
tCAObj.save(session);]]></script>
<in-binding><bind name='tCAObj' type='VSPK:TCA' export-name="tCAObj" ></bind>

<bind name='description' type='string' export-name="description" ></bind>

<bind name='externalID' type='string' export-name="externalID" ></bind>

<bind name='metric' type='VSPK:TCAMetric' export-name="metric" ></bind>

<bind name='name' type='string' export-name="name" ></bind>

<bind name='period' type='number' export-name="period" ></bind>

<bind name='scope' type='VSPK:TCAScope' export-name="scope" ></bind>

<bind name='threshold' type='number' export-name="threshold" ></bind>

<bind name='type' type='VSPK:TCAType' export-name="type" ></bind>

</in-binding><out-binding></out-binding><position x='204.5' y='55.40909090909091'/>
</workflow-item>
<presentation>
<p-param name="tCAObj"><desc><![CDATA[tCAObj]]></desc>
<p-qual name="contextualParameter" type="void" ><![CDATA[__NULL__]]></p-qual></p-param>

<p-param name="description"><desc><![CDATA[description]]></desc>
<p-qual kind="ognl" name="defaultValue" type="string" ><![CDATA[#tCAObj.description]]></p-qual></p-param>

<p-param name="externalID"><desc><![CDATA[externalID]]></desc>
<p-qual kind="ognl" name="defaultValue" type="string" ><![CDATA[#tCAObj.externalID]]></p-qual></p-param>

<p-param name="metric"><desc><![CDATA[metric]]></desc>
<p-qual kind="ognl" name="defaultValue" type="VSPK:TCAMetric" ><![CDATA[GetAction("net.nuagenetworks.vro.vspk","getTCAMetric").call( #tCAObj )]]></p-qual></p-param>

<p-param name="name"><desc><![CDATA[name]]></desc>
<p-qual kind="ognl" name="defaultValue" type="string" ><![CDATA[#tCAObj.name]]></p-qual></p-param>

<p-param name="period"><desc><![CDATA[period]]></desc>
<p-qual kind="ognl" name="defaultValue" type="number" ><![CDATA[#tCAObj.period]]></p-qual></p-param>

<p-param name="scope"><desc><![CDATA[scope]]></desc>
<p-qual kind="ognl" name="defaultValue" type="VSPK:TCAScope" ><![CDATA[GetAction("net.nuagenetworks.vro.vspk","getTCAScope").call( #tCAObj )]]></p-qual></p-param>

<p-param name="threshold"><desc><![CDATA[threshold]]></desc>
<p-qual kind="ognl" name="defaultValue" type="number" ><![CDATA[#tCAObj.threshold]]></p-qual></p-param>

<p-param name="type"><desc><![CDATA[type]]></desc>
<p-qual kind="ognl" name="defaultValue" type="VSPK:TCAType" ><![CDATA[GetAction("net.nuagenetworks.vro.vspk","getTCAType").call( #tCAObj )]]></p-qual></p-param>

</presentation></workflow>